<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (20211204.2007)
 -->
<!-- Title: MiraiCP::Event Pages: 1 -->
<svg width="230pt" height="611pt"
 viewBox="0.00 0.00 230.00 611.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 607)">
<title>MiraiCP::Event</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-607 226,-607 226,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-486.5 152,-486.5 152,-0.5 0,-0.5"/>
<text text-anchor="middle" x="76" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::Event</text>
<polyline fill="none" stroke="black" points="0,-467.5 152,-467.5 "/>
<text text-anchor="middle" x="76" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-448.5 152,-448.5 "/>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static bool noRegistered</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int index)</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void clear()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"> noexcept</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void incomingEvent</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">(BaseEventData j, int type)</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void broadcast</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">(EventClass &amp;&amp;val)</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::shared</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; NodeHandle &gt; register</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">Event(std::function&lt; void</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">(EventClass)&gt; callback, priority</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">_level level=100)</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::shared</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; NodeHandle &gt; register</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockingEvent(std::function</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; bool(EventClass)&gt; callback,</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> priority_level level=100)</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static bool noRegistered</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int index)</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void clear()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"> noexcept</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void incomingEvent</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">(BaseEventData j, int type)</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void broadcast</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">(EventClass &amp;&amp;val)</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::shared</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; NodeHandle &gt; register</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">Event(std::function&lt; void</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">(EventClass)&gt; callback, priority</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">_level level=100)</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::shared</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; NodeHandle &gt; register</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">BlockingEvent(std::function</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; bool(EventClass)&gt; callback,</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> priority_level level=100)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Event()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; Event()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; constexpr static int id()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; constexpr static int id()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node1 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M152.35,-288.01C162.93,-280.67 170,-265.84 170,-243.5 170,-227.97 166.58,-216.06 160.94,-207.79"/>
<polygon fill="none" stroke="#404040" points="160.74,-207.58 153.68,-206.08 152.35,-198.99 159.4,-200.49 160.74,-207.58"/>
<text text-anchor="middle" x="196" y="-241" font-family="Helvetica,sans-Serif" font-size="10.00"> +processor</text>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="12,-534.5 12,-602.5 140,-602.5 140,-534.5 12,-534.5"/>
<text text-anchor="start" x="20" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">vector&lt; std::map&lt; priority</text>
<text text-anchor="middle" x="76" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">_level, event_vector &gt; &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="12,-572.5 140,-572.5 "/>
<text text-anchor="middle" x="76" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="12,-553.5 140,-553.5 "/>
<text text-anchor="middle" x="76" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M76,-534.45C76,-524.25 76,-512.13 76,-498.72"/>
<polygon fill="none" stroke="#404040" points="76,-498.62 72,-492.62 76,-486.62 80,-492.62 76,-498.62"/>
<text text-anchor="middle" x="106" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;_all_events_</text>
</g>
</g>
</svg>
