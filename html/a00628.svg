<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (20211204.2007)
 -->
<!-- Title: MiraiCP::ForwardedMessage Pages: 1 -->
<svg width="255pt" height="1013pt"
 viewBox="0.00 0.00 255.00 1013.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1009)">
<title>MiraiCP::ForwardedMessage</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1009 251,-1009 251,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-497.5 247,-497.5 247,-0.5 0,-0.5"/>
<text text-anchor="middle" x="123.5" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::ForwardedMessage</text>
<polyline fill="none" stroke="black" points="0,-478.5 247,-478.5 "/>
<text text-anchor="start" x="8" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; std::vector&lt; ForwardedNode</text>
<text text-anchor="start" x="8" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; nodes</text>
<text text-anchor="start" x="8" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; ForwardedMessageDisplayStrategy</text>
<text text-anchor="start" x="8" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"> display</text>
<polyline fill="none" stroke="black" points="0,-426.5 247,-426.5 "/>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ForwardedNode &amp; operator</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">[](int i)</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const ForwardedNode</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; operator[](int i)</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void add(ForwardedNode &amp;&amp;a)</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void add(const Forwarded</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node &amp;a)</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto &amp; operator+=(const</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ForwardedNode &amp;a)</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto &amp; operator+=(Forwarded</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node &amp;&amp;a)</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ForwardedMessage &amp;m)</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ForwardedMessage(std</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">::initializer_list&lt; Forwarded</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node &gt; nodes, ForwardedMessageDisplay</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy display=ForwardedMessageDisplayStrategy</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">::defaultStrategy())</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ForwardedMessage(std</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">::vector&lt; ForwardedNode</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; inNodes, ForwardedMessageDisplay</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy display=ForwardedMessageDisplay</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy::defaultStrategy())</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ForwardedMessage(const</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> ForwardedMessage &amp;)=default</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ForwardedMessage(Forwarded</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">Message &amp;&amp;)=default</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ nlohmann::json toJson</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MessageSource sendTo</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Contact *c) const</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ nlohmann::json nodesToJson</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static ForwardedMessage</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> deserializationFromMessageJson</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const nlohmann::json &amp;j)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00729.html" target="_top" xlink:title="MessageChain的组成部分">
<polygon fill="white" stroke="black" points="41.5,-534.5 41.5,-877.5 205.5,-877.5 205.5,-534.5 41.5,-534.5"/>
<text text-anchor="middle" x="123.5" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::SingleMessage</text>
<polyline fill="none" stroke="black" points="41.5,-858.5 205.5,-858.5 "/>
<text text-anchor="start" x="49.5" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string content</text>
<text text-anchor="start" x="49.5" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string prefix</text>
<text text-anchor="start" x="49.5" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int internalType</text>
<text text-anchor="start" x="49.5" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="49.5" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const messageType</text>
<text text-anchor="start" x="49.5" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="49.5" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const miraiCodeName</text>
<polyline fill="none" stroke="black" points="41.5,-773.5 205.5,-773.5 "/>
<text text-anchor="start" x="49.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SingleMessage(int</text>
<text text-anchor="start" x="49.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00"> inType, std::string</text>
<text text-anchor="start" x="49.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> content, std::string</text>
<text text-anchor="start" x="49.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"> prefix=&quot;:&quot;) noexcept</text>
<text text-anchor="start" x="49.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~SingleMessage</text>
<text text-anchor="start" x="49.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">() noexcept=default</text>
<text text-anchor="start" x="49.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual nlohmann::json</text>
<text text-anchor="start" x="49.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toJson() const</text>
<text text-anchor="start" x="49.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string toMiraiCode</text>
<text text-anchor="start" x="49.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="49.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const</text>
<text text-anchor="start" x="49.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> SingleMessage &amp;m) const</text>
<text text-anchor="start" x="49.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(SingleMessage</text>
<text text-anchor="start" x="49.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *m) const</text>
<text text-anchor="start" x="49.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="49.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getTypeString(int type)</text>
<text text-anchor="start" x="49.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getKey(const</text>
<text text-anchor="start" x="49.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;value)</text>
<text text-anchor="start" x="49.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getMiraiCodeKey</text>
<text text-anchor="start" x="49.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;value)</text>
<text text-anchor="start" x="49.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SingleMessage()=default</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M123.5,-524.12C123.5,-515.43 123.5,-506.65 123.5,-497.82"/>
<polygon fill="none" stroke="midnightblue" points="120,-524.28 123.5,-534.28 127,-524.28 120,-524.28"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00713.html" target="_top" xlink:title="MiraiCode父类, 指可以被转换成miraicode的类型">
<polygon fill="white" stroke="black" points="63,-914.5 63,-1004.5 184,-1004.5 184,-914.5 63,-914.5"/>
<text text-anchor="middle" x="123.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::MiraiCodeable</text>
<polyline fill="none" stroke="black" points="63,-985.5 184,-985.5 "/>
<text text-anchor="middle" x="123.5" y="-973.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="63,-966.5 184,-966.5 "/>
<text text-anchor="start" x="71" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::string</text>
<text text-anchor="start" x="71" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toMiraiCode() const =0</text>
<text text-anchor="start" x="71" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~MiraiCodeable</text>
<text text-anchor="start" x="71" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M123.5,-904.25C123.5,-895.95 123.5,-887.04 123.5,-877.74"/>
<polygon fill="none" stroke="midnightblue" points="120,-904.4 123.5,-914.4 127,-904.4 120,-904.4"/>
</g>
</g>
</svg>
