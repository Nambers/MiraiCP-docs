<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (20211204.2007)
 -->
<!-- Title: MiraiCP::UnSupportMessage Pages: 1 -->
<svg width="213pt" height="672pt"
 viewBox="0.00 0.00 213.00 672.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 668)">
<title>MiraiCP::UnSupportMessage</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-668 209,-668 209,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="目前不支持的消息类型, 不支持发送">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-156.5 205,-156.5 205,-0.5 0,-0.5"/>
<text text-anchor="middle" x="102.5" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::UnSupportMessage</text>
<polyline fill="none" stroke="black" points="0,-137.5 205,-137.5 "/>
<text text-anchor="middle" x="102.5" y="-125.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-118.5 205,-118.5 "/>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ nlohmann::json toJson</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ShouldNotUse(&quot;不支持直接发送</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">UnSupportMessage&quot;) std</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UnSupportMessage(const</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;content)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> UnSupportMessage &amp;m)</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int type()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00729.html" target="_top" xlink:title="MessageChain的组成部分">
<polygon fill="white" stroke="black" points="20.5,-193.5 20.5,-536.5 184.5,-536.5 184.5,-193.5 20.5,-193.5"/>
<text text-anchor="middle" x="102.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::SingleMessage</text>
<polyline fill="none" stroke="black" points="20.5,-517.5 184.5,-517.5 "/>
<text text-anchor="start" x="28.5" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string content</text>
<text text-anchor="start" x="28.5" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string prefix</text>
<text text-anchor="start" x="28.5" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int internalType</text>
<text text-anchor="start" x="28.5" y="-472.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="28.5" y="-461.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const messageType</text>
<text text-anchor="start" x="28.5" y="-450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="28.5" y="-439.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const miraiCodeName</text>
<polyline fill="none" stroke="black" points="20.5,-432.5 184.5,-432.5 "/>
<text text-anchor="start" x="28.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SingleMessage(int</text>
<text text-anchor="start" x="28.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"> inType, std::string</text>
<text text-anchor="start" x="28.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> content, std::string</text>
<text text-anchor="start" x="28.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00"> prefix=&quot;:&quot;) noexcept</text>
<text text-anchor="start" x="28.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~SingleMessage</text>
<text text-anchor="start" x="28.5" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">() noexcept=default</text>
<text text-anchor="start" x="28.5" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual nlohmann::json</text>
<text text-anchor="start" x="28.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toJson() const</text>
<text text-anchor="start" x="28.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string toMiraiCode</text>
<text text-anchor="start" x="28.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="28.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const</text>
<text text-anchor="start" x="28.5" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> SingleMessage &amp;m) const</text>
<text text-anchor="start" x="28.5" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(SingleMessage</text>
<text text-anchor="start" x="28.5" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *m) const</text>
<text text-anchor="start" x="28.5" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="28.5" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getTypeString(int type)</text>
<text text-anchor="start" x="28.5" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getKey(const</text>
<text text-anchor="start" x="28.5" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;value)</text>
<text text-anchor="start" x="28.5" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getMiraiCodeKey</text>
<text text-anchor="start" x="28.5" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;value)</text>
<text text-anchor="start" x="28.5" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SingleMessage()=default</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M102.5,-182.89C102.5,-173.86 102.5,-165.06 102.5,-156.65"/>
<polygon fill="none" stroke="midnightblue" points="99,-183.17 102.5,-193.17 106,-183.17 99,-183.17"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00713.html" target="_top" xlink:title="MiraiCode父类, 指可以被转换成miraicode的类型">
<polygon fill="white" stroke="black" points="42,-573.5 42,-663.5 163,-663.5 163,-573.5 42,-573.5"/>
<text text-anchor="middle" x="102.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::MiraiCodeable</text>
<polyline fill="none" stroke="black" points="42,-644.5 163,-644.5 "/>
<text text-anchor="middle" x="102.5" y="-632.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="42,-625.5 163,-625.5 "/>
<text text-anchor="start" x="50" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::string</text>
<text text-anchor="start" x="50" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toMiraiCode() const =0</text>
<text text-anchor="start" x="50" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~MiraiCodeable</text>
<text text-anchor="start" x="50" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M102.5,-563.25C102.5,-554.95 102.5,-546.04 102.5,-536.74"/>
<polygon fill="none" stroke="midnightblue" points="99,-563.4 102.5,-573.4 106,-563.4 99,-563.4"/>
</g>
</g>
</svg>
