<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.50.0 (20211204.2007)
 -->
<!-- Title: MiraiCP::RemoteFile Pages: 1 -->
<svg width="160pt" height="826pt"
 viewBox="0.00 0.00 160.00 826.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 822)">
<title>MiraiCP::RemoteFile</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-822 156,-822 156,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="远程(群)文件类型">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-332.5 152,-332.5 152,-0.5 0,-0.5"/>
<text text-anchor="middle" x="76" y="-320.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::RemoteFile</text>
<polyline fill="none" stroke="black" points="0,-313.5 152,-313.5 "/>
<text text-anchor="start" x="8" y="-301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string id</text>
<text text-anchor="start" x="8" y="-290.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ unsigned int internalid</text>
<text text-anchor="start" x="8" y="-279.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string name</text>
<text text-anchor="start" x="8" y="-268.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ long long size</text>
<text text-anchor="start" x="8" y="-257.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::optional&lt; std</text>
<text text-anchor="start" x="8" y="-246.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &gt; path</text>
<text text-anchor="start" x="8" y="-235.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::optional&lt; Dinfo</text>
<text text-anchor="start" x="8" y="-224.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; dinfo</text>
<text text-anchor="start" x="8" y="-213.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::optional&lt; Finfo</text>
<text text-anchor="start" x="8" y="-202.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; finfo</text>
<polyline fill="none" stroke="black" points="0,-195.5 152,-195.5 "/>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string serializeToString()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoteFile plus(unsigned</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int ii)</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoteFile(const std</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;i, unsigned</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int ii, std::string n,</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long s, std::string</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> p, struct Dinfo d, struct</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Finfo f)</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RemoteFile(const std</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;i, unsigned</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int ii, std::string n,</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> long long s)</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int type()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static RemoteFile deserialize</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromString(const std::string</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;source)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="a00657.html" target="_top" xlink:title="MessageChain的组成部分">
<polygon fill="white" stroke="black" points="2.5,-369.5 2.5,-690.5 149.5,-690.5 149.5,-369.5 2.5,-369.5"/>
<text text-anchor="middle" x="76" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::SingleMessage</text>
<polyline fill="none" stroke="black" points="2.5,-671.5 149.5,-671.5 "/>
<text text-anchor="start" x="10.5" y="-659.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string content</text>
<text text-anchor="start" x="10.5" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string prefix</text>
<text text-anchor="start" x="10.5" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ int internalType</text>
<text text-anchor="start" x="10.5" y="-626.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="10.5" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const messageType</text>
<text text-anchor="start" x="10.5" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static const char *const</text>
<text text-anchor="start" x="10.5" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *const miraiCodeName</text>
<polyline fill="none" stroke="black" points="2.5,-586.5 149.5,-586.5 "/>
<text text-anchor="start" x="10.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SingleMessage(int</text>
<text text-anchor="start" x="10.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> inType, std::string</text>
<text text-anchor="start" x="10.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> content, std::string</text>
<text text-anchor="start" x="10.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> prefix=&quot;:&quot;) noexcept</text>
<text text-anchor="start" x="10.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SingleMessage() noexcept</text>
<text text-anchor="start" x="10.5" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> override=default</text>
<text text-anchor="start" x="10.5" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual nlohmann::json</text>
<text text-anchor="start" x="10.5" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toJson() const</text>
<text text-anchor="start" x="10.5" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::string toMiraiCode</text>
<text text-anchor="start" x="10.5" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const override</text>
<text text-anchor="start" x="10.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool operator==(const</text>
<text text-anchor="start" x="10.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00"> SingleMessage &amp;m) const</text>
<text text-anchor="start" x="10.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static std::string</text>
<text text-anchor="start" x="10.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> getTypeString(int type)</text>
<text text-anchor="start" x="10.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getKey(const</text>
<text text-anchor="start" x="10.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;value)</text>
<text text-anchor="start" x="10.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static int getMiraiCodeKey</text>
<text text-anchor="start" x="10.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;value)</text>
<text text-anchor="start" x="10.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SingleMessage()=default</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M76,-359.36C76,-350.45 76,-341.51 76,-332.63"/>
<polygon fill="none" stroke="midnightblue" points="72.5,-359.39 76,-369.39 79.5,-359.39 72.5,-359.39"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="a00641.html" target="_top" xlink:title="MiraiCode父类, 指可以被转换成miraicode的类型">
<polygon fill="white" stroke="black" points="15.5,-727.5 15.5,-817.5 136.5,-817.5 136.5,-727.5 15.5,-727.5"/>
<text text-anchor="middle" x="76" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">MiraiCP::MiraiCodeable</text>
<polyline fill="none" stroke="black" points="15.5,-798.5 136.5,-798.5 "/>
<text text-anchor="middle" x="76" y="-786.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="15.5,-779.5 136.5,-779.5 "/>
<text text-anchor="start" x="23.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual std::string</text>
<text text-anchor="start" x="23.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00"> toMiraiCode() const =0</text>
<text text-anchor="start" x="23.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~MiraiCodeable</text>
<text text-anchor="start" x="23.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M76,-717.24C76,-708.97 76,-700.08 76,-690.85"/>
<polygon fill="none" stroke="midnightblue" points="72.5,-717.39 76,-727.39 79.5,-717.39 72.5,-717.39"/>
</g>
</g>
</svg>
